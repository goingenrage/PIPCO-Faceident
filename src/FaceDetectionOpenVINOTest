from openvino.inference_engine import IENetwork, IEPlugin
import cv2
import numpy as np


net = IENetwork(model="../models/face-detection-retail-0004.xml",weights="../models/face-detection-retail-0004.bin")
#plugin = IEPlugin(device ="CPU", plugin_dirs = "../models/libMKLDNNPlugin.so")
plugin = IEPlugin(device = "CPU")
plugin.add_cpu_extension("/home/reichenecker/inference_engine_samples_build/intel64/Release/lib/libcpu_extension.so")
print("eksdee")
Exec_net = plugin.load(network=net)
capture = cv2.VideoCapture(0)
input_blob = next(iter(net.inputs))
out_blob = next(iter(net.outputs))
n, c, h, w = net.inputs[input_blob].shape
while(True):
            ret, frame = capture.read()
            initial_w = capture.get(3)
            initial_h = capture.get(4)
            img = cv2.resize(frame, (w, h))
            img = img.transpose((2, 0, 1))  # Change data layout from HWC to CHW
            img = img.reshape((n, c, h, w))
            Exec_net.infer(inputs={input_blob: img})
            res = Exec_net.requests[0].outputs[out_blob]
            print(res)
            print("eksde")



            for obj in res[0][0]:
                if obj[2] > 0.5:
                    print('Gesicht erkannt!')
                    x = int(obj[3] * initial_w)
                    y = int(obj[4] * initial_h)
                    wx = int(obj[5] *initial_w)
                    hx = int(obj[6] * initial_h)
                    cv2.imshow('HELLO', frame)
                    cv2.rectangle(frame, (x, y), ( wx, hx), (0, 255, 0), 2)
            cv2.imshow('HELLO', frame)


            if cv2.waitKey(1) & 0xFF == ord('q'):
                capture.release()
                cv2.destroyAllWindows()
                break

print("ende")